using System;
using System.Collections.Generic;
using System.Text;

public class GSM
{
    private string model; 
    private string manufacturer;
    private ushort price;
    private string owner;
    private Battery battery;
    private Display display;
    private static GSM iPhone4S;
    private List<Call> callHistory;

    static GSM()
    {
        IPhone4S = new GSM("iPhone 4S", "Apple");
    }

    public GSM(string model, string manufacturer)
        : this(model, manufacturer, 0)
    {
    }

    public GSM(string model, string manufacturer, ushort price)
        : this(model, manufacturer, price, "")
    {
    }

    public GSM(string model, string manufacturer, ushort price, string owner)
        : this(model, manufacturer, price, owner, "", null, 0, 0)
    {
    }

    public GSM(string model, string manufacturer, ushort price, string owner, string batteryModel, BatteryType? batteryType, byte hoursIdle, byte hoursTalk) 
        : this (model, manufacturer, price, owner, batteryModel, batteryType, hoursIdle, hoursTalk, 0, 0)
    {
    }

    public GSM(string model, string manufacturer, ushort price, string owner, string batteryModel, BatteryType? batteryType, byte hoursIdle, byte hoursTalk, byte size, ushort numberOfColors)
    {
        this.model = model;
        this.manufacturer = manufacturer;
        this.price = price;
        this.owner = owner;
        this.Battery = new Battery(batteryModel, hoursIdle, hoursTalk, batteryType);
        this.Display = new Display(size, numberOfColors);
        this.callHistory = new List<Call>();
    }

    public List<Call> CallHistory
    {
        get { return this.callHistory; }
        set { this.callHistory = value; }
    }

    public void AddCall(DateTime dateTime, string dialedNumber, uint duration)
    {
        this.callHistory.Add(new Call(dateTime, dialedNumber, duration));
    }

    public void DeleteCall(int callID)
    {
        this.CallHistory.RemoveAt(callID);
    }

    public void ClearCallHistory()
    {
        this.CallHistory.Clear();
    }

    public string TotalCallPrice(decimal cenaNaMinuta)
    {
        decimal totalPrice = 0m;
        decimal totalTime = 0m;

        foreach (var call in this.CallHistory)
        {
            totalTime += call.Duration;
        }
        totalPrice = (totalTime / 60) * cenaNaMinuta;
        return string.Format("{0:C3}", totalPrice);
    }

    public string Model
    {
        get { return this.model;}
        set { this.model = value;}
    }

    public string Manufacturer
    {
        get{ return this.manufacturer;}
        set{ this.manufacturer = value;}
    }

    public ushort Price
    {
        get { return this.price;}
        set { this.price = value;}
    }

    public string Owner
    {
        get { return this.owner;}
        set { this.owner = value;}
    }

    public Battery Battery
    {
        get { return this.battery;}
        set { this.battery = value;}
    }

    public Display Display
    {
        get { return this.display;}
        set { this.display = value;}
    }
    
    public static GSM IPhone4S
    {
        get { return iPhone4S;}
        set { iPhone4S = value;}
    }

    public override string ToString()
    {
        StringBuilder sb = new StringBuilder();
        sb.AppendLine("Model: " + this.model + "\n" + "Manufacturer: " + this.manufacturer);

        if (this.price > 0)
        {
            sb.AppendLine("Price: " + string.Format("{0:C}", this.price));
        }

        if (!string.IsNullOrWhiteSpace(this.owner))
        {
            sb.AppendLine("Owner: " + this.owner);
        }

        if (!string.IsNullOrWhiteSpace(this.Battery.Model))
        {
            sb.AppendLine("Battery: " + this.Battery.Model);
        }
        else
        {
            sb.AppendLine("Battery: N/A");
        }

        if (this.Battery.BatteryType != null)
        {
            sb.AppendLine("Battery type: " + this.Battery.BatteryType);
        }
        else
        {
            sb.AppendLine("Battery type: N/A");
        }

        if (this.Battery.HoursIdle > 0)
        {
            sb.AppendLine("Standby time: " + this.Battery.HoursIdle);
        }
        else
        {
            sb.AppendLine("Standby time: N/A");
        }

        if (this.Battery.HoursTalk > 0)
        {
            sb.AppendLine("Talk time: " + this.Battery.HoursTalk);
        }
        else
        {
            sb.AppendLine("Talk time: N/A");
        }


        if (this.Display.Size > 0)
        {
            sb.AppendLine("Display Size: " + this.Display.Size);
        }
        else
        {
            sb.AppendLine("Display Size: N/A");
        }

        if ( this.Display.NumberOfColors>0)
        {
            sb.AppendLine("Colors: " + this.Display.NumberOfColors);
        }
        else
        {
            sb.AppendLine("Colors: N/A");
        }
        return sb.ToString();
    }
}
