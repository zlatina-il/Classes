/*
Create a class Path to hold a sequence of points in the 3D space. Create a static class PathStorage with static methods to save and 
load paths from a text file. Use a file format of your choice.
*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Point
{
    public class Path3D
    {
        private List<Point3D> sequenceOfPoints = new List<Point3D>();

        public List<Point3D> Paths
        {
            get { return this.sequenceOfPoints; }
        }

        public void AddPoints(Point3D point)
        {
            this.sequenceOfPoints.Add(point);
        }

    }
    public static class PathStorage
    {
        public static void SavePath(Path3D path)
        {
            using (StreamWriter sw = new StreamWriter("@../../../../Saved.txt"))
            {
                foreach (var i in path.Paths)
                {
                    sw.WriteLine(String.Format("({0},{1},{2})", i.X, i.Y, i.Z));
                }
            }
        }

        public static Path3D LoadPath()
        {
            Path3D loaded = new Path3D();

            using (StreamReader sr = new StreamReader("@../../../../Loaded.txt"))
            {
                string line = sr.ReadLine();
                while (line != null)
                {
                    string[] coord = line.Split(new char[] { ' ', ',' }, StringSplitOptions.RemoveEmptyEntries);
                    Point3D point = new Point3D(int.Parse(coord[0]), int.Parse(coord[1]), int.Parse(coord[2]));
                    loaded.AddPoints(point);
                    line = sr.ReadLine();
                }
            }
            return loaded;
        }
    }
}
